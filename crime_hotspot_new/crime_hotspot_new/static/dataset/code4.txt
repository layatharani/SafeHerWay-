var infowindow = new google.maps.InfoWindow();
    var marker, i;

	
    for (i = 0; i < locations.length; i++) { 
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });
//marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png');
marker.setIcon('../static/assets/images/red-dot.png');

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
	
	////////////////////////////////////////
	
	for (i = 0; i < locations2.length; i++) { 
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations2[i][1], locations2[i][2]),
        map: map
      });
marker.setIcon('../static/assets/images/orange-dot.png');
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations2[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
	
	//////////////////////////////////
	
	for (i = 0; i < locations3.length; i++) { 
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations3[i][1], locations3[i][2]),
        map: map
      });
marker.setIcon('../static/assets/images/yellow-dot.png');
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations3[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
	
	//////////////////////////////////
	
	for (i = 0; i < locations4.length; i++) { 
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations4[i][1], locations4[i][2]),
        map: map
      });
marker.setIcon('../static/assets/images/pink-dot.png');
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations4[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
	
	//////////////////////////////////
	
	for (i = 0; i < locations5.length; i++) { 
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations5[i][1], locations5[i][2]),
        map: map
      });
marker.setIcon('../static/assets/images/blue-dot.png');
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations5[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
	
	//////////////////////////////////
	
	for (i = 0; i < locations6.length; i++) { 
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations6[i][1], locations6[i][2]),
        map: map
      });
marker.setIcon('../static/assets/images/brown-dot.png');
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations6[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
	
	//////////////////////////////////
	
            // Define the source and destination
            //var source = new google.maps.LatLng(37.7749, -122.4194); // San Francisco
            //var destination = new google.maps.LatLng(34.0522, -118.2437); // Los Angeles
			var source=document.getElementById("t1").value;
			var destination=document.getElementById("t2").value;

            // Create a DirectionsService object to use the route method and get a result for our request
            var directionsService = new google.maps.DirectionsService();

            // Array to hold multiple route options
            var routes = [];

            // Define multiple route options
            var routeOptions = [
                { travelMode: google.maps.TravelMode.DRIVING, strokeColor: 'red' },
                { travelMode: google.maps.TravelMode.BICYCLING, strokeColor: 'blue' },
                { travelMode: google.maps.TravelMode.WALKING, strokeColor: 'green' }
            ];

            // Loop through route options and request directions
            routeOptions.forEach(function(option) {
                var request = {
                    origin: source,
                    destination: destination,
                    travelMode: option.travelMode
                };


			
			
                // Make the DirectionsService route request
                directionsService.route(request, function(result, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        // Add route to the map
                        var directionsRenderer = new google.maps.DirectionsRenderer({
                            map: map,
                            directions: result,
                            polylineOptions: { strokeColor: option.strokeColor }
                        });
                        // Add route to the routes array
                        routes.push(directionsRenderer);
                    }
                });
            });
        }
    </script>

    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not included in this example)-->
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap"></script>
	
	
	</div>
		</div>
	</div>
	
</body>
</html>